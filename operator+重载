#include <iostream>
using namespace std;

//运算符重载:对已有的运算符进行重新定义
class person
{

public :
    //通过自己写的成员函数，实现两个对象相加后返回新的对象
   person operator+(person &a)
    {

        person temp;
        temp.m1=this->m1+a.m1;
        temp.m2=this->m2+a.m2;
        return temp;
    }


    int m1,m2;
};

//通过全局函数重载+
person operator+(person &a,person &b)
    {

        person temp;
        temp.m1=a.m1+b.m1;
        temp.m2=a.m2+b.m2;
        return temp;
    }

void test1()
{
    person p1;
p1.m1=1;
p1.m2=3;
person p2;
p2.m1=7;
p2.m2=5;
   person p3;
  // p3=p1+p2;//本质是
   p3=p1.operator+(p2);
   cout<< "p3.m1  "<<p3.m1<<endl;
   cout<<"p3.m2  "<<p3.m2<<endl;


}
void test2()
{

    person p1;
p1.m1=2;
p1.m2=3;
person p2;
p2.m1=7;
p2.m2=5;
person p3;
   // p3=p1+p2;本质是
   p3=operator+(p1,p2);
     cout<< "p3.m1  "<<p3.m1<<endl;
   cout<<"p3.m2  "<<p3.m2<<endl;
}
int main()
{

    test2();
    test1();
    return 0;
}
