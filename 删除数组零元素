从键盘读入n个整数放入数组中，编写函数CompactIntegers，删除数组中所有值为0的元素，其后元素向数组首端移动。注意，CompactIntegers函数需要接受数组及其元素个数作为参数，函数返回值应为删除操作执行后数组的新元素个数。输出删除后数组中元素的个数并依次输出数组元素。
样例输入: （输入格式说明：5为输入数据的个数，3 4 0 0 2 是以空格隔开的5个整数）
5 
3 4 0 0 2
样例输出:（输出格式说明：3为非零数据的个数，3 4 2 是以空格隔开的3个非零整数）
3
3 4 2
样例输入: 
7
0 0 7 0 0 9 0
样例输出:
2
7 9
样例输入: 
3
0 0 0
样例输出:
0
```
int CompactIntegers(int *nums,int len)
{
    int n=0;int arr[len]={0};

    //将数组中不为0的元素存放到
   for(int i=0;i<len;i++)
   {
       if(nums[i]!=0)
       {
          arr[n]= nums[i];
          n++;

       }

   }
    cout<<n<<endl;
//打印没有0的数组
     for(int i=0;i<n;i++)
   {
    cout<<arr[i]<<" ";
   }

    return n+1;
}

int main()
{
    int n=0;int number;
    cin>>n;
    int nums[n];
    int len=n;
    int i=0;
    while(n--)//输入n个值并存入数组
    {
       cin>>number;
       nums[i]=number;i++;
      // cout<<nums[number];
    }


    CompactIntegers(nums,len);

}
```
